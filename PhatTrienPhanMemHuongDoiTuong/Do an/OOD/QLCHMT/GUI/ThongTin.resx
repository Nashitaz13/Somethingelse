<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4q0H+ZW5JLYAAAAASUVORK5CYII=
</value>
  </data>
</root>